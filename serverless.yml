
service: contratarwifiplan

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: giuli 


functions:
  pagoCredito: 
    handler: ./src/lambdas/pagoCredito.handler
  pagoDebito: 
    handler: ./src/lambdas/pagoDebito.handler
  formatError: 
    handler: ./src/lambdas/formatError.handler
  enviarData: 
    handler: ./src/lambdas/enviarData.handler
    events: 
      - sqs: 
          batchSize: 1
          arn: 
            Fn::GetAtt: [SendQueue, Arn]
  obtenerPlanes:
    handler: ./src/lambdas/obtenerPlanes.handler
  elegirPlanes:
    handler: ./src/lambdas/elegirPlanes.handler
    environment:
      URL_SQS: ${cf:contratarwifiplan-${opt:stage, 'dev'}.SendQueueURL}
    role:
      Fn::GetAtt: ['ElegirPlanesLambdaRole', 'Arn']
  recibirRespuesta:
    handler: ./src/lambdas/recibirRespuesta.handler
    events:
      - http:
         path: /contratar-wifi/recibirRespuesta
         method: post
    role:
      Fn::GetAtt: ['RecibirRespuestasLambdaRole', 'Arn']

stepFunctions: 
  stateMachines: 
    contratarServicioWifi: 
      name: ${self:service}-stateMachine
      definition: ${file(./src/stepFunctions/contratarServicioWifi.asl.json)}
      role: 
        Fn::GetAtt: [ContratarServicioWifiMachineRole, Arn]


resources: 
  Resources: 
    SendQueue: ${file(./src/resources/SQS.yml):SendQueue}
    SendQueueDLQ: ${file(./src/resources/SQS.yml):SendQueueDLQ}
    ContratarServicioWifiMachineRole: ${file(./src/resources/StepFunctionsRole.yml):ContratarServicioWifiMachineRole}
    ElegirPlanesLambdaRole: ${file(./src/resources/LambdaRole.yml):ElegirPlanesLambdaRole}
    RecibirRespuestasLambdaRole: ${file(./src/resources/LambdaRole.yml):RecibirRespuestasLambdaRole}
  
  Outputs: 
    SendQueueURL:
      Value: 
        Ref: SendQueue
      Export:
        Name: SendQueue


plugins: 
  - serverless-step-functions
